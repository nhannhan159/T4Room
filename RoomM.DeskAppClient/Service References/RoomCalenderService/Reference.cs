//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RoomM.DeskApp.RoomCalenderService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RoomCalenderService.IRoomCalenderService")]
    public interface IRoomCalenderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_RoomCalendar/GetAll", ReplyAction="http://tempuri.org/IServiceOf_RoomCalendar/GetAllResponse")]
        System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_RoomCalendar/GetAll", ReplyAction="http://tempuri.org/IServiceOf_RoomCalendar/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_RoomCalendar/Add", ReplyAction="http://tempuri.org/IServiceOf_RoomCalendar/AddResponse")]
        void Add(RoomM.Models.RoomCalendar entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_RoomCalendar/Add", ReplyAction="http://tempuri.org/IServiceOf_RoomCalendar/AddResponse")]
        System.Threading.Tasks.Task AddAsync(RoomM.Models.RoomCalendar entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_RoomCalendar/DeleteByT", ReplyAction="http://tempuri.org/IServiceOf_RoomCalendar/DeleteByTResponse")]
        void DeleteByT(RoomM.Models.RoomCalendar entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_RoomCalendar/DeleteByT", ReplyAction="http://tempuri.org/IServiceOf_RoomCalendar/DeleteByTResponse")]
        System.Threading.Tasks.Task DeleteByTAsync(RoomM.Models.RoomCalendar entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_RoomCalendar/DeleteByObject", ReplyAction="http://tempuri.org/IServiceOf_RoomCalendar/DeleteByObjectResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<RoomM.Models.RoomCalendar>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RoomM.Models.RoomCalendar))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RoomM.Models.EntityBase))]
        void DeleteByObject(object id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_RoomCalendar/DeleteByObject", ReplyAction="http://tempuri.org/IServiceOf_RoomCalendar/DeleteByObjectResponse")]
        System.Threading.Tasks.Task DeleteByObjectAsync(object id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_RoomCalendar/Edit", ReplyAction="http://tempuri.org/IServiceOf_RoomCalendar/EditResponse")]
        void Edit(RoomM.Models.RoomCalendar entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_RoomCalendar/Edit", ReplyAction="http://tempuri.org/IServiceOf_RoomCalendar/EditResponse")]
        System.Threading.Tasks.Task EditAsync(RoomM.Models.RoomCalendar entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetSingle", ReplyAction="http://tempuri.org/IRoomCalenderService/GetSingleResponse")]
        RoomM.Models.RoomCalendar GetSingle(int roomCalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetSingle", ReplyAction="http://tempuri.org/IRoomCalenderService/GetSingleResponse")]
        System.Threading.Tasks.Task<RoomM.Models.RoomCalendar> GetSingleAsync(int roomCalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetByRoomId", ReplyAction="http://tempuri.org/IRoomCalenderService/GetByRoomIdResponse")]
        System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetByRoomId(long roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetByRoomId", ReplyAction="http://tempuri.org/IRoomCalenderService/GetByRoomIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetByRoomIdAsync(long roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetByStaffId", ReplyAction="http://tempuri.org/IRoomCalenderService/GetByStaffIdResponse")]
        System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetByStaffId(long staffId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetByStaffId", ReplyAction="http://tempuri.org/IRoomCalenderService/GetByStaffIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetByStaffIdAsync(long staffId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetByDate", ReplyAction="http://tempuri.org/IRoomCalenderService/GetByDateResponse")]
        System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetByDate(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetByDate", ReplyAction="http://tempuri.org/IRoomCalenderService/GetByDateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetByDateAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetByDateAndRoomId", ReplyAction="http://tempuri.org/IRoomCalenderService/GetByDateAndRoomIdResponse")]
        System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetByDateAndRoomId(System.DateTime date, long roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetByDateAndRoomId", ReplyAction="http://tempuri.org/IRoomCalenderService/GetByDateAndRoomIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetByDateAndRoomIdAsync(System.DateTime date, long roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetByWeekAndRoomId", ReplyAction="http://tempuri.org/IRoomCalenderService/GetByWeekAndRoomIdResponse")]
        System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetByWeekAndRoomId(System.DateTime date, long roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetByWeekAndRoomId", ReplyAction="http://tempuri.org/IRoomCalenderService/GetByWeekAndRoomIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetByWeekAndRoomIdAsync(System.DateTime date, long roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetByWatchedState", ReplyAction="http://tempuri.org/IRoomCalenderService/GetByWatchedStateResponse")]
        System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetByWatchedState(bool isWatched, int staffId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetByWatchedState", ReplyAction="http://tempuri.org/IRoomCalenderService/GetByWatchedStateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetByWatchedStateAsync(bool isWatched, int staffId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetByRegisteredState", ReplyAction="http://tempuri.org/IRoomCalenderService/GetByRegisteredStateResponse")]
        System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetByRegisteredState(int registeredState, int staffId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomCalenderService/GetByRegisteredState", ReplyAction="http://tempuri.org/IRoomCalenderService/GetByRegisteredStateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetByRegisteredStateAsync(int registeredState, int staffId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoomCalenderServiceChannel : RoomM.DeskApp.RoomCalenderService.IRoomCalenderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoomCalenderServiceClient : System.ServiceModel.ClientBase<RoomM.DeskApp.RoomCalenderService.IRoomCalenderService>, RoomM.DeskApp.RoomCalenderService.IRoomCalenderService {
        
        public RoomCalenderServiceClient() {
        }
        
        public RoomCalenderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoomCalenderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomCalenderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomCalenderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public void Add(RoomM.Models.RoomCalendar entity) {
            base.Channel.Add(entity);
        }
        
        public System.Threading.Tasks.Task AddAsync(RoomM.Models.RoomCalendar entity) {
            return base.Channel.AddAsync(entity);
        }
        
        public void DeleteByT(RoomM.Models.RoomCalendar entity) {
            base.Channel.DeleteByT(entity);
        }
        
        public System.Threading.Tasks.Task DeleteByTAsync(RoomM.Models.RoomCalendar entity) {
            return base.Channel.DeleteByTAsync(entity);
        }
        
        public void DeleteByObject(object id) {
            base.Channel.DeleteByObject(id);
        }
        
        public System.Threading.Tasks.Task DeleteByObjectAsync(object id) {
            return base.Channel.DeleteByObjectAsync(id);
        }
        
        public void Edit(RoomM.Models.RoomCalendar entity) {
            base.Channel.Edit(entity);
        }
        
        public System.Threading.Tasks.Task EditAsync(RoomM.Models.RoomCalendar entity) {
            return base.Channel.EditAsync(entity);
        }
        
        public RoomM.Models.RoomCalendar GetSingle(int roomCalId) {
            return base.Channel.GetSingle(roomCalId);
        }
        
        public System.Threading.Tasks.Task<RoomM.Models.RoomCalendar> GetSingleAsync(int roomCalId) {
            return base.Channel.GetSingleAsync(roomCalId);
        }
        
        public System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetByRoomId(long roomId) {
            return base.Channel.GetByRoomId(roomId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetByRoomIdAsync(long roomId) {
            return base.Channel.GetByRoomIdAsync(roomId);
        }
        
        public System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetByStaffId(long staffId) {
            return base.Channel.GetByStaffId(staffId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetByStaffIdAsync(long staffId) {
            return base.Channel.GetByStaffIdAsync(staffId);
        }
        
        public System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetByDate(System.DateTime date) {
            return base.Channel.GetByDate(date);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetByDateAsync(System.DateTime date) {
            return base.Channel.GetByDateAsync(date);
        }
        
        public System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetByDateAndRoomId(System.DateTime date, long roomId) {
            return base.Channel.GetByDateAndRoomId(date, roomId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetByDateAndRoomIdAsync(System.DateTime date, long roomId) {
            return base.Channel.GetByDateAndRoomIdAsync(date, roomId);
        }
        
        public System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetByWeekAndRoomId(System.DateTime date, long roomId) {
            return base.Channel.GetByWeekAndRoomId(date, roomId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetByWeekAndRoomIdAsync(System.DateTime date, long roomId) {
            return base.Channel.GetByWeekAndRoomIdAsync(date, roomId);
        }
        
        public System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetByWatchedState(bool isWatched, int staffId) {
            return base.Channel.GetByWatchedState(isWatched, staffId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetByWatchedStateAsync(bool isWatched, int staffId) {
            return base.Channel.GetByWatchedStateAsync(isWatched, staffId);
        }
        
        public System.Collections.Generic.List<RoomM.Models.RoomCalendar> GetByRegisteredState(int registeredState, int staffId) {
            return base.Channel.GetByRegisteredState(registeredState, staffId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RoomM.Models.RoomCalendar>> GetByRegisteredStateAsync(int registeredState, int staffId) {
            return base.Channel.GetByRegisteredStateAsync(registeredState, staffId);
        }
    }
}
